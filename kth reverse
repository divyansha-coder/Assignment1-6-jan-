/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    int length(ListNode* head){
        int cnt = 0;
        while(head){
            head = head->next;
            cnt++;
        }
        return cnt;
    }
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
    
    ListNode * prev = NULL;
    ListNode * curr = head;
    ListNode * nextptr = NULL;
    
    int size = length(head);

    
    if(size < k)
    return head;
    
    int count = 0;
    while(curr && count < k){
        nextptr = curr->next;
        curr->next = prev;
        prev = curr;
        curr = nextptr;
        count++;
        size--;
    }
        if(nextptr != NULL)
        head ->next = reverseKGroup(nextptr , k);
        
    
   
    return prev;
    }

};
